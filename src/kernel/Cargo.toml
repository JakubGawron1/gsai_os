[package]
name = "kernel"
version = "0.0.0"
edition = "2021"

[dependencies.port-rs]
path = "../shared/port-rs/"
[dependencies.uart]
path = "../shared/uart/"
[dependencies.msr]
path = "../shared/msr/"
[dependencies.apic]
path = "../shared/apic/"
[dependencies.libcommon]
path = "../shared/libcommon/"
features = ["global_allocator"]
[dependencies.lzalloc]
path = "../shared/lzalloc/"
features = ["bytemuck"]
[target.'cfg(target_arch = "x86_64")'.dependencies.pic_8259]
path = "../shared/pic_8259/"
[dependencies]
log = { version = "*", default-features = false }
num_enum = { version = "*", default-features = false }
limine = { git = "https://github.com/limine-bootloader/limine-rs", features = ["requests-section"] }
bit_field = "*"
bitflags = "*"
spin = { git = "https://github.com/semiviral/spin-rs" }
paste = "*"
# TODO perhaps don't use ACPI / DTB in the kernel, but abstract it in libarch/libcommon/libkernel?
acpi = { git = "https://github.com/semiviral/acpi" }
# aml = "*"
# miniz_oxide = { version = "*", default-features = false }
bytemuck = "*"
rustc-demangle = "*"
[target.'cfg(target_arch = "x86_64")'.dependencies]
x86_64 = "*"
raw-cpuid = "*"

[profile.dev]
opt-level = 1

[profile.release]
# Release optimizations are specified in the xtask `Builder`. Optimization can be controlled with `-o p/s/ps`